1.What happens when you initialize a repository? Why do you need to do it?
It creates git repo, where all my commit history and meta data will be stored.
I need this in order to use Git version control.
2.How is the staging area different from the working directory and the repository? What value do you think it offers?
It gives you an idea of a "cloud", where files are stored in-between the git repository itself and your
working directory. It gives you an opportunity to add files aka in your backpack and then pull them in your git repo
with a commit.
3.How can you use the staging area to make sure you have one commit per logical change?
I can get use of git diff to see what changes I've made and wheather this changes are
logically connected. In order to only make one commit per logical change.
4.What are some situations when branches would be helpful in keeping your history organized? How would branches help?
Branches can be really helpful with different versions of the file, so you can be free experimenting with
your project and don't bother with that git checkout to the previous commit to catch the bug.
5.How do the diagrams help you visualize the branch structure?
First and foremost diagrams help to see wheather I have certain commit in git log of a particular commit or
wheather I need to make a merge of those changes. Then it's a useful tool for seeing the commits that were made in
particular branches.
6.What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
The result of merging to branches is one branch, that contains commits from the merged two. 
The diagram shows better what commits are common between two branches and which ones are different, that were
made only within one particular branch.